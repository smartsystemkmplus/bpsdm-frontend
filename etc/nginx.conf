server {

  listen 80;
  # Increase header buffer sizes globally
  large_client_header_buffers 4 16k;

  proxy_buffer_size 16k;
  proxy_buffers 4 32k;
  proxy_busy_buffers_size 64k;      

  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";    
  }

  
  location ~ ^/auth/.*$ {
    proxy_pass http://bpsdm-auth-service.production.svc.cluster.local;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Increase timeout values
    proxy_connect_timeout 180s;
    proxy_send_timeout 180s;
    proxy_read_timeout 180s;
    
    # Add CORS headers
    add_header Access-Control-Allow-Origin *; # Allow all origins. Use specific domain for stricter policy.
    # Handle preflight (OPTIONS) requests
    if ($request_method = OPTIONS) {
     add_header Access-Control-Allow-Origin *;
     add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
     add_header Access-Control-Allow-Headers "Content-Type, Authorization";
     add_header Content-Length 0;
     add_header Content-Type text/plain;
     return 204; # No Content
      
    }    
  }

  location ~ ^/karma/.*$ {
    proxy_pass http://bpsdm-gamification-service-bpsdm-bpsdm-gamification;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Increase timeout values
    proxy_connect_timeout 180s;
    proxy_send_timeout 180s;
    proxy_read_timeout 180s;
    
    # Add CORS headers
    add_header Access-Control-Allow-Origin *; # Allow all origins. Use specific domain for stricter policy.
    # Handle preflight (OPTIONS) requests
    if ($request_method = OPTIONS) {
     add_header Access-Control-Allow-Origin *;
     add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
     add_header Access-Control-Allow-Headers "Content-Type, Authorization";
     add_header Content-Length 0;
     add_header Content-Type text/plain;
     return 204; # No Content
      
    }    
  }

  location ~ ^/kms/.*$ {
    proxy_pass http://bpsdm-kms-frontend-bpsdm-kms-dev;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Increase timeout values
    proxy_connect_timeout 180s;
    proxy_send_timeout 180s;
    proxy_read_timeout 180s;
    
    # Add CORS headers
    add_header Access-Control-Allow-Origin *; # Allow all origins. Use specific domain for stricter policy.
    # Handle preflight (OPTIONS) requests
    if ($request_method = OPTIONS) {
     add_header Access-Control-Allow-Origin *;
     add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
     add_header Access-Control-Allow-Headers "Content-Type, Authorization";
     add_header Content-Length 0;
     add_header Content-Type text/plain;
     return 204; # No Content
      
    }    
  }

  location ~ ^/api/.*$ {
    proxy_pass http://bpsdm-cms-service-bpsdm-cms-dev;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Increase timeout values
    proxy_connect_timeout 180s;
    proxy_send_timeout 180s;
    proxy_read_timeout 180s;
    
    # Add CORS headers
    add_header Access-Control-Allow-Origin *; # Allow all origins. Use specific domain for stricter policy.
    # Handle preflight (OPTIONS) requests
    if ($request_method = OPTIONS) {
     add_header Access-Control-Allow-Origin *;
     add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
     add_header Access-Control-Allow-Headers "Content-Type, Authorization";
     add_header Content-Length 0;
     add_header Content-Type text/plain;
     return 204; # No Content
      
    }    
  }
  
  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}
